console.log('#11. JavaScript homework example file')

/*
 * #1
 *
 * Написати функцію, яка приймає рядок як вхідний параметр і перевіряє,
 *  чи є цей рядок валідною електронною адресою за допомогою регулярного виразу.
 * Функція повертає true, якщо електронна адреса валідна, і false в іншому випадку.
 *
 */

function isValidEmail(email) {
const regularEmail = /^(?![.-])[\w.-]+(?<![.-])@(?![.-])[a-z0-9-]+(?<![.-])\.[a-z]{2,}$/i;
    return regularEmail.test(email);
}
//(?![.-]) - не починається з . чи -
//(?<![.-]) - не закінчується з . чи -
//[\w.-] - цифри, літери, _, . та -
//[a-zA-Z]{2,} - літери не менше 2
console.log(isValidEmail('example@example.com')) // Повинно вивести: true
console.log(isValidEmail('invalid-email'))       // Повинно вивести: false

/*
 * #2
 *
 * Написати функцію, яка приймає рядок як вхідний параметр і перевіряє,
 * чи є цей рядок валідним URL веб-сайту за допомогою регулярного виразу.
 * Функція повертає true, якщо URL валідний, і false в іншому випадку.
 *
 */

/*

*/

function isValidUrl(url) {
    const regularUrl =  /^(https?:\/\/)?((?![.-])[a-zA-Z0-9-]+(?<![.-])\.)+[a-zA-Z]{2,}(\/\S*)?$/;
    return regularUrl.test(url);}
//(\/[^\s]*) - частина, що посилається на певну адресу сторінки сайту. Якщо посилання на головну - можна не використовувати
//(https?:\/\/) - можна використовувати чи ні, але якщо використовувати то тільки в варіанті https://,
// наприклад, https:/ -вже не пропустить. При цьому враховано, що буває http
console.log(isValidUrl('https://www.example.com')) // Повинно вивести: true
console.log(isValidUrl('invalid-url'))             // Повинно вивести: false

// Експорт функції для використання та тестування
export { isValidEmail, isValidUrl }
